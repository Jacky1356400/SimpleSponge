buildscript {
  repositories {
    jcenter()
    maven { url = "http://files.minecraftforge.net/maven" }
    maven { url = "https://plugins.gradle.org/m2/" }
  }
  dependencies {
    classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    classpath 'com.wynprice.cursemaven:CurseMaven:2.+'
  }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.wynprice.cursemaven'

version = "${mc_version}-${mod_version}"
group = "jackyy.simplesponge"
archivesBaseName = "SimpleSponge"

sourceCompatibility = targetCompatibility = "1.8"
compileJava {
  sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
  version = "${forge_version}"
  runDir = "run"
  mappings = "${mappings_version}"

  replace '@FINGERPRINT@', project.findProperty('signSHA1')
  replaceIn "SimpleSponge.java"
}

repositories {
  maven {
    name = "JEI Maven"
    url = "http://dvs1.progwml6.com/files/maven"
  }
  maven {
    name = "HWYLA Maven"
    url = "https://tehnut.info/maven"
  }
  maven {
    name = "CoFH Maven"
    url = "http://maven.covers1624.net"
  }
}

dependencies {
  deobfCompile "mezz.jei:jei_1.12.2:+"
  deobfCompile "mcp.mobius.waila:Hwyla:1.8.26-B41_1.12.2"
  deobfCompile "curse.maven:gunpowderlib:2852431"
  compile "cofh:RedstoneFlux:1.12-2.+:deobf"
}

processResources {
  inputs.property "version", project.version
  inputs.property "mcversion", project.minecraft.version
  from(sourceSets.main.resources.srcDirs) {
    include 'mcmod.info'
    expand 'version':project.version, 'mcversion':project.minecraft.version
  }
  from(sourceSets.main.resources.srcDirs) {
    exclude 'mcmod.info'
  }
}

task signJar(type: SignJar, dependsOn: reobfJar) {
  onlyIf {
    project.hasProperty('keyStore')
  }
  keyStore = project.findProperty('keyStore')
  alias = project.findProperty('keyStoreAlias')
  storePass = project.findProperty('keyStorePass')
  keyPass = project.findProperty('keyStoreKeyPass')
  inputFile = jar.archivePath
  outputFile = jar.archivePath
}

build.dependsOn signJar

task deobfJar(type: Jar) {
  from sourceSets.main.output
  classifier = 'deobf'
}

artifacts {
  archives deobfJar
}

